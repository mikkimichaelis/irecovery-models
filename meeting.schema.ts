import { cloneDeep, isEmpty, isNil, join } from 'lodash';
import { DateTime } from 'luxon';
import { ObjectSchema, Realm } from 'realm';
import { Meeting } from './meeting';
import { IRecurrence, RecurrenceType } from './recurrence';
import { SpecificDay } from './search-settings';

export class MeetingSchema extends Realm.Object<Meeting> {
    static schema: ObjectSchema = {
        name: 'Meeting',
        properties: {
            _id: { type: "objectId", default: () => new Realm.BSON.ObjectId() },
            sid: 'string',
            iid: 'string',
            uid: 'string',
            hash: 'string',
            updated: 'int',
            active: 'bool',
            authorized: 'bool',
            verified: 'bool',
            verified_status: 'int',
            verified_date: 'int',
            meetingUrl: 'string',
            homeUrl: 'string',
            sourceUrl: 'string',
            zid: 'string',
            password: 'string',
            _password: 'string',
            requiresLogin: 'bool',
            closed: 'bool',
            restricted: 'bool',
            restrictedDescription: 'string',
            language: 'string',
            postal: 'string',
            location: 'string',
            group: 'string',
            groupType: 'string',
            meetingTypes: 'string[]',
            description: 'string',
            description_links: 'string[]',
            tags_custom: 'string[]',
            tags_custom_: 'string[]',
            tags_description_: 'string[]',
            tags_name_: 'string[]',
            tags_location_: 'string[]',
            tags_: 'string[]',
            continuous: 'bool',
            recurrence: 'Recurrence',
            timezone: 'string',
            time24h: 'string',
            duration: 'int',
            startTime: 'int',
            startTime$: 'string',
            endTime: 'int',
            startDateTime: 'int',
            endDateTime: 'int',
            buymeacoffee: 'string',
            isFeatured: 'bool?',
            isAdHoc: 'bool',
            meetingTxt: 'string',
            meetingShareTxt: 'string',
            meetingShareUrl: 'string',
        },
        primaryKey: '_id',
    };
}
